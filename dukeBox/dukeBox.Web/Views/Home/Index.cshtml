<div id="container">
    <div id="song-list-wrapper">
        <ul id="song-list"></ul>
    </div>
    <div style="clear:both"></div>
    <div id="jquery_jplayer_1" class="jp-jplayer"></div>

    <div style="display:none" id="jp_container_1" class="jp-audio">
        <div class="jp-type-playlist">
            <div class="jp-gui jp-interface">
                <ul class="jp-controls">
                    <li><a href="javascript:;" class="jp-previous" tabindex="1">previous</a></li>
                    <li><a href="javascript:;" class="jp-play" tabindex="1">play</a></li>
                    <li><a href="javascript:;" class="jp-pause" tabindex="1">pause</a></li>
                    <li><a href="javascript:;" class="jp-next" tabindex="1">next</a></li>
                    <li><a href="javascript:;" class="jp-stop" tabindex="1">stop</a></li>
                    <li><a href="javascript:;" class="jp-mute" tabindex="1" title="mute">mute</a></li>
                    <li><a href="javascript:;" class="jp-unmute" tabindex="1" title="unmute">unmute</a></li>
                    <li><a href="javascript:;" class="jp-volume-max" tabindex="1" title="max volume">max volume</a></li>
                </ul>
                <div class="jp-progress">
                    <div class="jp-seek-bar">
                        <div class="jp-play-bar"></div>

                    </div>
                </div>
                <div class="jp-volume-bar">
                    <div class="jp-volume-bar-value"></div>
                </div>
                <div class="jp-current-time"></div>
                <div class="jp-duration"></div>
                <ul style="display:none;" class="jp-toggles">
                    <li><a href="javascript:;" class="jp-shuffle" tabindex="1" title="shuffle">shuffle</a></li>
                    <li><a href="javascript:;" class="jp-shuffle-off" tabindex="1" title="shuffle off">shuffle off</a></li>
                    <li><a href="javascript:;" class="jp-repeat" tabindex="1" title="repeat">repeat</a></li>
                    <li><a href="javascript:;" class="jp-repeat-off" tabindex="1" title="repeat off">repeat off</a></li>
                </ul>
            </div>
            <div class="jp-playlist">
                <ul>
                    <li></li>
                </ul>
            </div>
            <div class="jp-no-solution">
                <span>Update Required</span>
                To play the media you will need to either update your browser to a recent version or update your <a href="http://get.adobe.com/flashplayer/" target="_blank">Flash plugin</a>.
            </div>
        </div>
    </div>
</div>

<div style="display:none">
    <form id="search-for-song" action="">
        <input type="text" id="search-term" />
        <button type="submit">Search</button>
    </form>
    <ul id="search-results"></ul>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        var playlist;
        var songs = [];
        var apiUrl = window.location.protocol + "//" + window.location.host;
        $(function () {

            initializeJPlayer();

            // Reference the auto-generated proxy for the hub.
            var dukebox = $.connection.songsHub;
            // Create a function that the hub can call back to display messages.
            dukebox.client.addSongToQueue = function (song) {
                addSongToQueue(song, true);
            };

            dukebox.client.swapSongs = function (bottomSongIndex, topSongIndex) {
                playlist.swap(bottomSongIndex, topSongIndex);
                refreshQueue();
                notif({ msg: "Challenge Won!", type: "success" });
            };

            dukebox.client.removeSongFromQueue = function (index) {
                playlist.remove(index);
                $('#song-list > li').eq(index).fadeOut();
                console.log("removing list item");
            };



            // Start the connection.
            $.connection.hub.start().done(function () {
                initializeQueue();

                $('#add-song').submit(function (event) {
                    var title = $('#song-title').val();
                    var song = { Title: title };
                    $.ajax({
                        url: apiUrl + "/api/Songs/AddSongToQueue",
                        type: "POST",
                        data: JSON.stringify(song),
                        contentType: "application/JSON"
                    });
                    event.preventDefault();
                });

                $('#search-for-song').submit(function (event) {
                    var query = $('#search-term').val();
                    $.ajax({
                        url: apiUrl + "/api/Songs?query=" + query,
                        type: "GET",
                        success: function (subsonicItems, textStatus, jqXHR) {
                            $('#search-results').empty();
                            $.each(subsonicItems, function (index, value) {
                                var song = value;
                                var li = $("<li>").html(song.name + " (" + song.artist + ", <em>" + song.album + "</em>) <br />Length: " + moment().startOf('day').seconds(song.duration).format('H:mm:ss') + "<br />");
                                var a = $("<a>").text("Add to Queue").attr('href', '#').click(function () {
                                    $.ajax({
                                        url: apiUrl + "/api/Songs/AddSongToQueue",
                                        type: "POST",
                                        data: JSON.stringify(song),
                                        contentType: "application/JSON"
                                    });
                                    return false;
                                });
                                li.append(a);
                                $('#search-results').append(li);
                            });
                        }
                    });
                    event.preventDefault();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function addSongToQueue(song, addToPlaylist) {
            var queueEmpty = songs.length == 0;
            songs.push(song);
            if (addToPlaylist) {
                playlist.add({
                    id: song.id,
                    title: song.name,
                    artist: song.artist,
                    mp3: song.url,
                    poster: song.imageUrl
                });
                if (queueEmpty) {
                    playlist.play(0);
                }
            }
            $('#song-list').append("<li>" + "<div class='poster'><img src='" + song.imageUrl + "' /></div><label>Track:</label>" + htmlEncode(song.name) + "<br /><label>Artist:</label>" + song.artist + "<br /><label>Album:</label>" + song.album + "</li>");
        }

        function initializeJPlayer() {
            playlist = new jPlayerPlaylist({
                jPlayer: "#jquery_jplayer_1",
                cssSelectorAncestor: "#jp_container_1"
            },
            [],
            {
                swfPath: "/Scripts",
                supplied: "mp3",
                wmode: "window",
                smoothPlayBar: true,
                keyEnabled: true
            });
            playlist.option("nextHandler", function (test) {
                $.ajax({
                    url: apiUrl + "/api/Songs/RemoveTopSong",
                    type: "POST"
                });
            });
        }

        function initializeQueue() {
            //get all current songs
            $('#song-list').empty();
            $.ajax({
                url: apiUrl + "/api/Songs/",
                type: "GET",
                success: function (songs, textStatus, jqXHR) {
                    for (var i = 0; i < songs.length; i++) {
                        addSongToQueue(songs[i], true);
                    }
                }
            });
        }

        function refreshQueue() {
            //get all current songs
            $('#song-list').empty();
            $.ajax({
                url: apiUrl + "/api/Songs/",
                type: "GET",
                success: function (songs, textStatus, jqXHR) {
                    for (var i = 0; i < songs.length; i++) {
                        addSongToQueue(songs[i], false);
                    }
                }
            });
        }
    </script>
}
